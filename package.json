{
  "name": "badge-roll",
  "version": "0.0.5",
  "description": "Configurable README Badge Automator",
  "keywords": [
    "badges"
  ],
  "homepage": "https://github.com/agorischek/badge-roll",
  "repository": "https://agorischek@github.com/agorischek/badge-roll.git",
  "license": "MIT",
  "author": {
    "name": "Alex Gorischek",
    "email": "alex.gorischek@gmail.com"
  },
  "type": "module",
  "exports": "./lib/index.js",
  "bin": "./lib/cli.js",
  "files": [
    "lib"
  ],
  "scripts": {
    "build": "rimraf lib && tsc --project tsconfig.build.json",
    "build:cli": "npm run build && chmod +x lib/cli.js",
    "build:docs": "ts-node src/contributions/provider-shields/docs-generator.ts",
    "cli:lib:affix": "node lib/cli.js affix",
    "cli:lib:check": "node lib/cli.js check",
    "cli:lib:loadConfig": "node lib/cli.js load-config",
    "cli:src:affix": "ts-node src/cli.ts affix",
    "cli:src:check": "ts-node src/cli.ts check",
    "cli:src:loadConfig": "ts-node src/cli.ts load-config",
    "dep:review": "depcheck",
    "dep:update": "ncu --upgrade --doctor",
    "lint": "eslint . --max-warnings=0 && remark . --frail && prettier \".\" --check && npm run cli:lib:check",
    "lint:fix": "eslint . --fix && remark . --output && prettier \".\" --write && node lib/cli.js affix",
    "test": "npm run build && npm run test:unit && npm run lint && npm run dep:review",
    "test:unit": "node --experimental-vm-modules node_modules/jest/bin/jest.js",
    "test:unit:coverage": "jest --collect-coverage",
    "test:unit:mutate": "stryker run"
  },
  "lint-staged": {
    "*.ts": "eslint --cache --fix",
    "*.json": "prettier --write",
    "*.md": [
      "remark . --frail",
      "prettier --write"
    ],
    "*.js": "eslint --cache --fix"
  },
  "eslintConfig": {
    "env": {
      "jest": true,
      "node": true
    },
    "plugins": [
      "prettier"
    ],
    "extends": [
      "xo",
      "prettier"
    ],
    "rules": {
      "prettier/prettier": "error"
    }
  },
  "remarkConfig": {
    "plugins": [
      "remark-preset-lint-recommended",
      [
        "remark-lint-list-item-indent",
        false
      ]
    ],
    "settings": {
      "emphasis": "*",
      "strong": "*"
    }
  },
  "dependencies": {
    "commander": "^8.2.0",
    "cosmiconfig": "^7.0.1",
    "glob": "^7.2.0",
    "joi": "^17.4.2",
    "lodash": "^4.17.21",
    "parse-github-url": "^1.0.2",
    "read-pkg": "^7.0.0",
    "remark-parse": "^10.0.0",
    "remark-stringify": "^10.0.1",
    "unified": "^10.1.0",
    "unist-util-find": "^1.0.2",
    "unist-util-find-after": "^4.0.0",
    "unist-util-find-before": "^3.0.0",
    "unist-util-is": "^5.1.1",
    "unist-util-parents": "^2.0.0",
    "unist-util-position": "^4.0.1",
    "unist-util-select": "^4.0.0",
    "url-parse": "^1.5.3",
    "yaml": "^1.10.2"
  },
  "devDependencies": {
    "@babel/core": "^7.15.8",
    "@babel/preset-env": "^7.15.8",
    "@babel/preset-typescript": "^7.15.0",
    "@stryker-mutator/core": "^5.4.1",
    "@stryker-mutator/jest-runner": "^5.4.1",
    "@types/jest": "^27.0.2 ",
    "@types/lodash": "^4.14.175",
    "@types/parse-github-url": "^1.0.0",
    "@types/unist": "^2.0.6",
    "@types/url-parse": "^1.4.4",
    "@typescript-eslint/eslint-plugin": "^5.1.0",
    "@typescript-eslint/parser": "^5.1.0",
    "babel-jest": "^27.3.1",
    "depcheck": "^1.4.2",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-config-xo": "^0.39.0",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-unicorn": "^37.0.1",
    "jest": "^27.3.1",
    "jest-joi": "^1.1.11",
    "lint-staged": "^11.2.3",
    "npm-check-updates": "^11.8.5",
    "prettier": "^2.4.1",
    "prettier-plugin-packagejson": "^2.2.13",
    "remark-cli": "^10.0.0",
    "remark-gfm": "^3.0.0",
    "remark-lint": "^9.1.0",
    "remark-preset-lint-recommended": "^6.1.1",
    "ts-jest": "^27.0.7",
    "ts-node": "^10.3.0",
    "typescript": "^4.4.4",
    "utility-types": "^3.10.0"
  },
  "engines": {
    "node": "^12.20.0 || ^14.13.1 || >=16.0.0",
    "npm": ">= 4.0.0"
  },
  "wallaby": {
    "autoDetect": true,
    "env": {
      "params": {
        "runner": "--experimental-vm-modules"
      }
    }
  }
}
